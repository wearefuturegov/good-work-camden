name: Ruby Cucumber Tests
# As opposed to the ci env used before on the Ruby action

on: [push]

jobs:
  test:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.7-alpine
        env:
          POSTGRES_USER: gwcamden
          POSTGRES_PASSWORD: password
          POSTGRES_DB: gwcamden_tst
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Ruby 2.6.5
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.5
          bundler-cache: true

      # - name: Ruby gem cache
      #   uses: actions/cache@v1
      #   with:
      #     path: vendor/bundle
      #     key: ${{ runner.os }}-gems1-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems1-

      # - name: bundle install
      #   run: |
      #     bundle update --bundler
      #     bundle config deployment true
      #     bundle config path vendor/bundle
      #     bundle install --jobs 4

      # - name: Install gems
      #   run: |
      #     bundle config path vendor/bundle
      #     bundle install --jobs 4 --retry 3

      - name: Setup database
        env:
          RAILS_ENV: test
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}
        run: |
          bundle exec rails db:drop
          bundle exec rails db:create
          bundle exec rails db:migrate
          bundle exec rails db:seed

      - name: Compile assets
        env:
          RAILS_ENV: test
        run: |
          bundle exec rails assets:precompile
      - name: Run cucumber tests
        env:
          RAILS_ENV: test
        run: |
          bundle exec cucumber --fail-fast
